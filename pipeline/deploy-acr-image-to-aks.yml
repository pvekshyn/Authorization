parameters:
  - name: acrRepository
    type: string
  - name: serviceName
    type: string

steps:
  - task: DownloadPipelineArtifact@2
    inputs:
      artifactName: 'manifestDrop'
      targetPath: '$(System.ArtifactsDirectory)/manifests '
  
  - task: KubernetesManifest@0
    displayName: Create imagePullSecret
    inputs:
      action: createSecret
      namespace: default
      secretName: secret
      dockerRegistryEndpoint: pvauthorizationcr-sc
      kubernetesServiceConnection: pvauthorizationaks-sc
  
  - task: KubernetesManifest@0
    displayName: Deploy to Kubernetes cluster
    inputs:
      action: deploy
      namespace: default
      manifests: |
        $(System.ArtifactsDirectory)/manifests/deployment.yml
        $(System.ArtifactsDirectory)/manifests/service.yml
      imagePullSecrets: |
        secret
      containers: |
        pvauthorizationcr.azurecr.io/${{ parameters.acrRepository }}:1.0.0
      kubernetesServiceConnection: pvauthorizationaks-sc

  - task: KubernetesManifest@0
    displayName: Scale to 0
    inputs: 
      action: scale
      kind: deployment
      name: ${{ parameters.serviceName }}
      replicas: 0
      kubernetesServiceConnection: pvauthorizationaks-sc
      namespace: default

  - task: KubernetesManifest@0
    displayName: Scale to 1
    inputs: 
      action: scale
      kind: deployment
      name: ${{ parameters.serviceName }}
      replicas: 1
      kubernetesServiceConnection: pvauthorizationaks-sc
      namespace: default
